{"ast":null,"code":"import _objectSpread from \"/home/gingerbreadcookies/Desktop/025_event-handling-in-react-practice/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/gingerbreadcookies/Desktop/025_event-handling-in-react-practice/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gingerbreadcookies/Desktop/025_event-handling-in-react-practice/src/components/App.jsx\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  var _useState = useState({\n    fName: \"\",\n    lName: \"\",\n    email: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      contact = _useState2[0],\n      setContact = _useState2[1];\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value; // if(name === 'fName'){\n    //   setContact({\n    //     fName: value,\n    //     lName: contact.lName,\n    //     email: contact.email\n    //   });\n    // } else if(name === 'lName'){\n    //   setContact({\n    //     fName: contact.fName,\n    //     lName: value,\n    //     email: contact.email\n    //   });\n    // } else {\n    //   setContact({\n    //     fName: contact.fName,\n    //     lName: contact.lName,\n    //     email: value\n    //   });\n    // }\n\n    if (name === 'fName') {\n      setContact(_objectSpread(_objectSpread({}, contact), {}, {\n        fName: value\n      }));\n    } else if (name === 'lName') {\n      setContact(_objectSpread(_objectSpread({}, contact), {}, {\n        lName: value\n      }));\n    } else {\n      setContact(_objectSpread(_objectSpread({}, contact), {}, {\n        email: value\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Hello \", contact.fName, \" \", contact.lName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, contact.email), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"fName\",\n    placeholder: \"First Name\",\n    onChange: handleChange,\n    value: contact.fName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"lName\",\n    placeholder: \"Last Name\",\n    onChange: handleChange,\n    value: contact.lName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    placeholder: \"Email\",\n    onChange: handleChange,\n    value: contact.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/gingerbreadcookies/Desktop/025_event-handling-in-react-practice/src/components/App.jsx"],"names":["React","useState","App","fName","lName","email","contact","setContact","handleChange","e","target","name","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,GAAT,GAAe;AACb,kBAA8BD,QAAQ,CAAC;AACrCE,IAAAA,KAAK,EAAE,EAD8B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,KAAK,EAAE;AAH8B,GAAD,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAMA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1B,oBAAwBA,CAAC,CAACC,MAA1B;AAAA,QAAQC,IAAR,aAAQA,IAAR;AAAA,QAAcC,KAAd,aAAcA,KAAd,CAD0B,CAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAGD,IAAI,KAAK,OAAZ,EAAoB;AAChBJ,MAAAA,UAAU,iCAELD,OAFK;AAGRH,QAAAA,KAAK,EAAES;AAHC,SAAV;AAKD,KANH,MAMS,IAAGD,IAAI,KAAK,OAAZ,EAAoB;AACzBJ,MAAAA,UAAU,iCACLD,OADK;AAERF,QAAAA,KAAK,EAAEQ;AAFC,SAAV;AAID,KALM,MAKA;AACLL,MAAAA,UAAU,iCACLD,OADK;AAERD,QAAAA,KAAK,EAAEO;AAFC,SAAV;AAID;AACJ,GAxCD;;AA4CA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSN,OAAO,CAACH,KADjB,OACyBG,OAAO,CAACF,KADjC,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,OAAO,CAACD,KAAZ,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,WAAW,EAAC,YAAhC;AAA6C,IAAA,QAAQ,EAAEG,YAAvD;AAAqE,IAAA,KAAK,EAAEF,OAAO,CAACH,KAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,WAAW,EAAC,WAAhC;AAA4C,IAAA,QAAQ,EAAEK,YAAtD;AAAoE,IAAA,KAAK,EAAEF,OAAO,CAACF,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,WAAW,EAAC,OAAhC;AAAwC,IAAA,QAAQ,EAAEI,YAAlD;AAAgE,IAAA,KAAK,EAAEF,OAAO,CAACD,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CALF,CADF;AAcD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [contact, setContact] = useState({\n    fName: \"\",\n    lName: \"\",\n    email: \"\"\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    \n    // if(name === 'fName'){\n    //   setContact({\n    //     fName: value,\n    //     lName: contact.lName,\n    //     email: contact.email\n    //   });\n    // } else if(name === 'lName'){\n    //   setContact({\n    //     fName: contact.fName,\n    //     lName: value,\n    //     email: contact.email\n    //   });\n    // } else {\n    //   setContact({\n    //     fName: contact.fName,\n    //     lName: contact.lName,\n    //     email: value\n    //   });\n    // }\n\n    if(name === 'fName'){\n        setContact({\n          // Using spread operator to add the latest version of the 'contact' object.\n          ...contact,\n          fName: value\n        });\n      } else if(name === 'lName'){\n        setContact({\n          ...contact,\n          lName: value\n        });\n      } else {\n        setContact({\n          ...contact,\n          email: value\n        });\n      }\n  }\n\n  \n\n  return (\n    <div className=\"container\">\n      <h1>\n        Hello {contact.fName} {contact.lName}\n      </h1>\n      <p>{contact.email}</p>\n      <form>\n        <input name=\"fName\" placeholder=\"First Name\" onChange={handleChange} value={contact.fName} />\n        <input name=\"lName\" placeholder=\"Last Name\" onChange={handleChange} value={contact.lName} />\n        <input name=\"email\" placeholder=\"Email\" onChange={handleChange} value={contact.email} />\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}